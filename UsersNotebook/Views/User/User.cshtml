@using UsersNotebook.Core.Models.Domains;
@model UserViewModel

@{
    ViewBag.Name = Model.Heading;
}

<h1>@Model.Heading</h1>

@using (Html.BeginForm("User", "User", FormMethod.Post))
{
    <p class="alert alert-info mt-4 mb-4">
        Pola Imię, Nazwisko, Data urodzenia, Płeć są wymagane
    </p>
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.User.Id)

    <div class="form-group mb-2">
        @Html.LabelFor(x => x.User.Name)
        @Html.TextBoxFor(x => x.User.Name, new { @class="form-control", autofocus = "autofocus"})
        @Html.ValidationMessageFor(x => x.User.Name)
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(x => x.User.Surname)
        @Html.TextBoxFor(x => x.User.Surname, new { @class="form-control", autofocus = "autofocus"})
        @Html.ValidationMessageFor(x => x.User.Surname)
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(x => x.User.DateOfBirth)
        @Html.TextBoxFor(x => x.User.DateOfBirth, "{0:dd-MM-yyyy}", new { @class="form-control", @id="DateOfBirth", autocomplete="off" })
        @Html.ValidationMessageFor(x => x.User.DateOfBirth)
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(x => x.User.Gender)
        @Html.DropDownListFor(x => x.User.Gender, new List<SelectListItem>
        {
            new SelectListItem { Text = "Wybierz płeć", Value = "" },
            new SelectListItem { Text = "Mężczyzna", Value = "Mężczyzna" },
            new SelectListItem { Text = "Kobieta", Value = "Kobieta" }
        }, new { @class = "form-control", autofocus = "autofocus" })
        @Html.ValidationMessageFor(x => x.User.Gender)
    </div>


    @if (Model.Heading == "Edytowanie urzytkownika")
    {
        <div class="form-group mb-2">
            <label class="col-form-label h5 font-weight-bold">Dodatkowa Informacja</label>
            <div class="mt-2">
                @Html.LabelFor(x => Model.AdditionalInformation.InformationType)
                <div>@Html.TextBoxFor(x => Model.AdditionalInformation.InformationType, new { @class = "form-control" })</div>
                @Html.LabelFor(x => Model.AdditionalInformation.InformationValue)
                <div>@Html.TextBoxFor(x => Model.AdditionalInformation.InformationValue, new { @class = "form-control" })</div>
            </div>
       </div>
    }

   


    @*<div class="form-group">
        <label asp-for="RecipeIngredients" class="col-form-label"></label>
        <span class="d-inline-block" tabindex="0" data-toggle="tooltip" data-placement="right" title="X button will delete last added ingredient">
            <i class="fas fa-question-circle"></i>
        </span>
        <div id="orderItemsContainer">
            @Html.EditorFor(model => model.RecipeIngredients)
        </div>
        <div class="row">
            <div class="ml-3 mr-3">
                <input class="btn btn-primary" type="button" id="btnAdd" value="Add ingredient" />
            </div>
            <div>
                <button class="btn btn-danger" type="button" id="btnRemove"><i class="fas fa-times"></i></button>
            </div>
        </div>
    </div>*@
    <div>
        <button type="submit" class="btn btn-primary btn-lg mt-2">Zapisz</button>
    </div>
    

}

@section scripts{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.0/themes/base/jquery-ui.css" />
    <script type="text/javascript">
        $(document).ready(function ()
    {
            $('#DateOfBirth').datepicker(
            {
                maxDate: "0",
                format: "dd-mm-yyyy",
                altFormat: "dd-mm-yy",
                altField: "#DateOfBirth",
                language: "pl",
                multidate: false,
                autoclose: true,
                todayHighlight: true,
                forceParse: false,
                changeYear: true,
                showButtonPanel: true
            });
    }) 
    </script>
}